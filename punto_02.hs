import Data.Time (getCurrentTime, diffUTCTime)
import Data.List (sortBy)
import Data.Ord (comparing)
-- Lista de estudiantes con calificaciones
estudiantes :: [(String, Int)]
estudiantes = [
    ("Juanki", 85),
    ("Ana", 92),
    ("Pedro", 85),
    ("Maria", 92),
    ("Luis", 78),
    ("Diego", 99),
    ("Pacheco",65),
    ("Pacheco",65),
    ("Juanki", 81),
    ("Ana", 93),
    ("Pedro", 84),
    ("Maria", 98),
    ("Luis", 77),
    ("Diego", 94),
    ("Pacheco",66),
    ("Pacheco",62),
    ("Juanki", 85),
    ("Ana", 92),
    ("Pedro", 85),
    ("Maria", 92),
    ("Luis", 78),
    ("Diego", 99),
    ("Pacheco",65),
    ("Pacheco",65),
    ("Juanki", 85),
    ("Ana", 92),
    ("Pedro", 85),
    ("Maria", 92),
    ("Luis", 78),
    ("Diego", 99),
    ("Pacheco",65),
    ("Pacheco",65),
    ("Juanki", 85),
    ("Ana", 92),
    ("Pedro", 85),
    ("Maria", 92),
    ("Luis", 78),
    ("Diego", 99),
    ("Pacheco",65),
    ("Pacheco",65),
    ("Juanki", 85),
    ("Ana", 92),
    ("Pedro", 85),
    ("Maria", 92),
    ("Luis", 78),
    ("Diego", 99),
    ("Pacheco",65),
    ("Pacheco",65),
    ("Juanki", 81),
    ("Ana", 93),
    ("Pedro", 84),
    ("Maria", 98),
    ("Luis", 77),
    ("Diego", 94),
    ("Pacheco",66),
    ("Pacheco",62),
    ("Juanki", 85),
    ("Ana", 92),
    ("Pedro", 85),
    ("Maria", 92),
    ("Luis", 78),
    ("Diego", 99),
    ("Pacheco",65),
    ("Pacheco",65),
    ("Juanki", 85),
    ("Ana", 92),
    ("Pedro", 85),
    ("Maria", 92),
    ("Luis", 78),
    ("Diego", 99),
    ("Pacheco",65),
    ("Pacheco",65),
    ("Juanki", 85),
    ("Ana", 92),
    ("Pedro", 85),
    ("Maria", 92),
    ("Luis", 78),
    ("Diego", 99),
    ("Pacheco",65),
    ("Pacheco",65),
    ("Juanki", 85),
    ("Ana", 92),
    ("Pedro", 85),
    ("Maria", 92),
    ("Luis", 78),
    ("Diego", 99),
    ("Pacheco",65),
    ("Pacheco",65),
    ("Juanki", 81),
    ("Ana", 93),
    ("Pedro", 84),
    ("Maria", 98),
    ("Luis", 77),
    ("Diego", 94),
    ("Pacheco",66),
    ("Pacheco",62),
     ("Juanki", 85),
    ("Ana", 92),
    ("Pedro", 85),
    ("Maria", 92),
    ("Luis", 78),
    ("Diego", 99),
    ("Pacheco",65),
    ("Pacheco",65),
    ("Juanki", 85),
    ("Ana", 92),
    ("Pedro", 85),
    ("Maria", 92),
    ("Luis", 78),
    ("Diego", 99),
    ("Pacheco",65),
    ("Pacheco",65),
    ("Juanki", 85),
    ("Ana", 92),
    ("Pedro", 85),
    ("Maria", 92),
    ("Luis", 78),
    ("Diego", 99),
    ("Pacheco",65),
    ("Pacheco",65),
    ("Juanki", 85),
    ("Ana", 92),
    ("Pedro", 85),
    ("Maria", 92),
    ("Luis", 78),
    ("Diego", 99),
    ("Pacheco",65),
    ("Pacheco",65),
    ("Juanki", 81),
    ("Ana", 93),
    ("Pedro", 84),
    ("Maria", 98),
    ("Luis", 77),
    ("Diego", 94),
    ("Pacheco",66),
    ("Pacheco",62),
    ("Juanki", 85),
    ("Ana", 92),
    ("Pedro", 85),
    ("Maria", 92),
    ("Luis", 78),
    ("Diego", 99),
    ("Pacheco",65),
    ("Pacheco",65),
    ("Juanki", 85),
    ("Ana", 92),
    ("Pedro", 85),
    ("Maria", 92),
    ("Luis", 78),
    ("Diego", 99),
    ("Pacheco",65),
    ("Pacheco",65),
    ("Juanki", 85),
    ("Ana", 92),
    ("Pedro", 85),
    ("Maria", 92),
    ("Luis", 78),
    ("Diego", 99),
    ("Pacheco",65),
    ("Pacheco",65)]
    

-- Importamos las funciones necesarias para ordenar

-- Función que ordena los estudiantes
ordenarEstudiantes :: [(String, Int)] -> [(String, Int)]
ordenarEstudiantes = sortBy (\(nombre1, nota1) (nombre2, nota2) ->
    if nota1 == nota2
    then compare nombre1 nombre2 -- Si las notas son iguales, comparamos por nombre
    else compare nota2 nota1)    -- Si las notas son diferentes, ordenamos por nota (descendente)

-- Función principal
main :: IO ()
main = do

    --importamos libreria para medir tiempos de carga, usamos metodos getCurrentTime
    start <- getCurrentTime

    let estudiantesOrdenados = ordenarEstudiantes estudiantes

    end <- getCurrentTime

    let tiempoEjecucion = diffUTCTime end start

    print estudiantesOrdenados

    putStrLn $ "Tiempo de ejecución: " ++ show tiempoEjecucion ++ " segundos"